#!/bin/sh

this="${BASH_SOURCE-$0}"
if readlink -f "$this" > /dev/null 2>&1
then
  this=`readlink -f "$this"`
fi
basedir=`dirname "$this"`
basedir=`cd "$basedir">/dev/null; pwd`

PIDPATH=$basedir/pid

export JAVA_HOME=/usr/local/jdk
if [ -x $JAVA_HOME/bin/java ]; then
    JAVA=$JAVA_HOME/bin/java
else
    JAVA=`which java`
fi

DD_HOME=$basedir/..
DD_CONF=$DD_HOME/conf

CLASSPATH=$DD_CONF
for jar in $DD_HOME/lib/*.jar; do
    CLASSPATH=$CLASSPATH:$jar
done

JVM_OPTS=" \
        -ea \
        -Xms1G \
        -Xmx1G \
        -XX:+UseParNewGC \
        -XX:+UseConcMarkSweepGC \
        -XX:+CMSParallelRemarkEnabled \
        -XX:SurvivorRatio=8 \
        -XX:MaxTenuringThreshold=1 \
        -XX:+HeapDumpOnOutOfMemoryError"

if [ ! -f $DD_CONF/dd.properties ]; then
    echo "Can't find the dd.properties in $DD_CONF."
    exit
fi

JMX_ENABLED=$(grep -E "^[^#]*dd.server.jmx.enabled=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
JMX_ADDRESS=$(grep -E "^[^#]*dd.server.jmx.address=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
JMX_PORT=$(grep -E "^[^#]*dd.server.jmx.port=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
if [ "$JMX_ENABLED" = "true" ]; then
  [ -z "$JMX_ADDRESS" ] && JMX_ADDRESS=$(hostname -i)
  [ -z "$JMX_PORT" ] && JMX_PORT=8081
  JVM_OPTS="$JVM_OPTS \
  -Djava.rmi.server.hostname=$JMX_ADDRESS \
  -Dcom.sun.management.jmxremote.port=$JMX_PORT \
  -Dcom.sun.management.jmxremote.ssl=false \
  -Dcom.sun.management.jmxremote.authenticate=false"
fi

JOLOKIA_ENABLED=$(grep -E "^[^#]*dd.server.jolokia.enabled=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
JOLOKIA_ADDRESS=$(grep -E "^[^#]*dd.server.jolokia.address=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
JOLOKIA_PORT=$(grep -E "^[^#]*dd.server.jolokia.port=" $DD_CONF/dd.properties|sed -e 's/.*=\(.*\)/\1/')
if [ "$JOLOKIA_ENABLED" = "true" ]; then
  [ -z "$JOLOKIA_ADDRESS" ] && JOLOKIA_ADDRESS=0.0.0.0
  [ -z "$JOLOKIA_PORT" ] && JOLOKIA_PORT=8778
  [ -f "$DD_HOME/ext/jolokia-jvm6.jar" ] && \
  JVM_OPTS="$JVM_OPTS -javaagent:$DD_HOME/ext/jolokia-jvm6.jar=port=$JOLOKIA_PORT,host=$JOLOKIA_ADDRESS,agentContext=/jmx"
fi

# Special-case path variables.
case "`uname`" in
    CYGWIN*)
        CLASSPATH=`cygpath -p -w "$CLASSPATH"`
        DD_HOME=`cygpath -p -w "$DD_HOME"`
        DD_CONF=`cygpath -p -w "$DD_CONF"`
    ;;
esac

debug=off
if [ "$debug" = "on" ]; then
echo DD_HOME         : $DD_HOME
echo DD_CONF         : $DD_CONF
echo JMX_ENABLED     : $JMX_ENABLED
echo JMX_PORT        : $JMX_PORT
echo JMX_ADDRESS     : $JMX_ADDRESS
echo JOLOKIA_ENABLED : $JOLOKIA_ENABLED
echo JOLOKIA_PORT    : $JOLOKIA_PORT
echo JOLOKIA_ADDRESS : $JOLOKIA_ADDRESS
echo JAVA            : $JAVA
echo JVM_OPTS        : $JVM_OPTS
echo CLASSPATH       : $CLASSPATH
echo PIDPATH         : $PIDPATH
fi
